extends layout.pug

block content
    #map
    #leg_title 
        span#leg_items Map Legend
    #leg
        each layer, i in jmap
            input(id=layer.name)(type='checkbox', checked)
            span#leg_items #{layer.name}
            br
    script(type='text/javascript').
        const center = [31.77, -106.44] 

        var map = L.map('map').setView(center, 10);
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        
        $.getJSON('/maplayers',function(result){
            //- $.each(result, function(i, mlayer){
                //alert(mlayer.name);
                //addLayer(L.mapbox.featureLayer().loadURL('/mapjson/' + mlayer.name), mlayer.name);
                //- $.getJSON('/mapjson/' + mlayer.name, function(data) {
                //-      addLayer(data, mlayer.name ) });
                //- });
            addLayer(result);
        });

        function addLayer(data){
            L.geoJson(data).addTo(map);
            
        }
  
        //- function addLayer(layer, name) {
        //-     var leaf_layer;
        //-     if (layer.type == "MultiPoint") {
        //-         leaf_layer = L.geoJson(layer, { pointToLayer: function (feature, latlng) {return L.circleMarker(latlng, layer.style); }})
        //-         leaf_layer.bindPopup(layer.type);
        //-     } else if (layer.type == "MultiLineString") {
        //-         leaf_layer = L.geoJson(layer, {style: layer.style, zIndex:999 });
        //-         leaf_layer.bindPopup(layer.type);
        //-     } else  {
        //-         leaf_layer = L.geoJson(layer, {
        //-             style: function(feature) {
        //-                 switch (feature.properties.style) {
        //-                 case 'Orange': return {
        //-                 fillColor: "black",
        //-                 color: "#ac8613",
        //-                 opacity: 1,
        //-                 fillOpacity: 0.8
        //-                 };
        //-                 case 'Blue': return {
        //-                 fillColor: "#0099ff",
        //-                 color: "#005f9d",
        //-                 opacity: 1,
        //-                 fillOpacity: 0.8
        //-                 };
        //-             }
        //-             },
        //-             onEachFeature: function (feature, layer) {
        //-                  layer.bindPopup(feature.properties.name);
        //-              }
        //-          });
        //-     }
        //-     leaf_layer.addTo(map);
            
        //-     $('#' + name).click(function(e) {
                
        //-         if (map.hasLayer(leaf_layer)) {
        //-             map.removeLayer(leaf_layer);
        //-         } else {
        //-             map.addLayer(leaf_layer);
        //-         }
        //-     });
        //- }